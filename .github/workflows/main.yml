name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/webgoat .

    - name: Scan Docker image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/webgoat
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/webgoat

    - name: Set up Kubeconfig
      run: echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/webgoat-deployment.yml
        kubectl apply -f k8s/webgoat-service.yml

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Dependabot
      run: |
        mkdir -p .github/dependabot
        echo "version: 2" > .github/dependabot.yml
        echo "updates:" >> .github/dependabot.yml
        echo "  - package-ecosystem: \"maven\"" >> .github/dependabot.yml
        echo "    directory: \"/\"" >> .github/dependabot.yml
        echo "    schedule:" >> .github/dependabot.yml
        echo "      interval: \"daily\"" >> .github/dependabot.yml

    - name: Run OWASP ZAP
      uses: zaproxy/action-full-scan@v0.4.1
      with:
        target: 'http://localhost:8080'
        cmd_options: '-a -m 10 -r zap_report.html -J zap_report.json'

    - name: Upload ZAP Reports
      uses: actions/upload-artifact@v2
      with:
        name: zap-reports
        path: |
          zap_report.html
          zap_report.json

    - name: Upload Trivy Report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy-report.html

  notify:
    runs-on: ubuntu-latest
    needs: [build, security]

    steps:
    - name: Send notification
      run: echo "Build and security checks complete."
